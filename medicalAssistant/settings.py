"""
Django settings for medicalAssistant project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
from decouple import config
from decouple import Csv
import sys
from dotenv import load_dotenv
load_dotenv()

import dj_database_url
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Función para verificar variables de entorno críticas



# Configuración básica
SECRET_KEY = os.getenv('SECRET_KEY')
DEBUG = False


    
ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'dashboard',
    'account',
    'django_recaptcha',
    'crispy_forms',
    "crispy_tailwind",
    "django_browser_reload",
    "django.contrib.postgres",
    'taggit',
    

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "django_browser_reload.middleware.BrowserReloadMiddleware",
]

ROOT_URLCONF = 'medicalAssistant.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates'
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                 #here add your context Processors
                'django.template.context_processors.media',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'medicalAssistant.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# FOR PRODUCTION

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv("PGDATABASE"),
        'USER': os.getenv("PGUSER"),
        'PASSWORD': os.getenv("PGPASSWORD"),
        'HOST': os.getenv("PGHOST"),
        'PORT': os.getenv("PGPORT"),
    }
}

# # FOR DEBUG

# DATABASES = {
#     'default': dj_database_url.config(default=os.getenv("DATABASE_URL"), conn_max_age=500)
# }



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]
STATIC_ROOT = BASE_DIR / 'staticfiles/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# FOR PRODUCTION
CLOUDFLARE_R2_BUCKET=os.getenv('CLOUDFLARE_R2_BUCKET')
CLOUDFLARE_R2_ACCESS_KEY=os.getenv('CLOUDFLARE_R2_ACCESS_KEY')
CLOUDFLARE_R2_SECRET_KEY=os.getenv('CLOUDFLARE_R2_SECRET_KEY')
CLOUDFLARE_R2_ENDPOINT=os.getenv('CLOUDFLARE_R2_ENDPOINT')

# #Config R2

CLOUDFLARE_R2_CONFIG_OPTIONS = {
    "bucket_name":CLOUDFLARE_R2_BUCKET,
    "access_key":CLOUDFLARE_R2_ACCESS_KEY,
    "secret_key":CLOUDFLARE_R2_SECRET_KEY,
    "endpoint_url":CLOUDFLARE_R2_ENDPOINT,
    "default_acl": "public-read",
    "signature_version": "s3v4",
    "region_name": "auto",
}

# AWS_BUCKET =config('AWS_BUCKET')
# AWS_ACCESS_KEY =config('AWS_ACCESS_KEY')
# AWS_SECRET_KEY =config('AWS_SECRET_KEY')
# AWS_S3_ENDPOINT =config('AWS_S3_ENDPOINT')

# CLOUDFLARE_R2_CONFIG_OPTIONS = {
#     "bucket_name":AWS_BUCKET,
#     "access_key":AWS_ACCESS_KEY,
#     "secret_key":AWS_SECRET_KEY,
#     "endpoint_url":AWS_S3_ENDPOINT,
#     "signature_version": "s3v4",
#     "region_name": "us-east-1",
# }


STORAGES = {
    "default":{
        "BACKEND": "helpers.cloudflare.storages.MediaFilesStorage",
        "OPTIONS": CLOUDFLARE_R2_CONFIG_OPTIONS
    },
    "staticfiles":{
        "BACKEND": "helpers.cloudflare.storages.StaticFilesStorage",
        "OPTIONS": CLOUDFLARE_R2_CONFIG_OPTIONS
    }
}



# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Replicate
REPLICATE_API_TOKEN= os.getenv('REPLICATE_API_TOKEN')
# OpenAI
OPENAI_API_KEY= os.getenv('OPENAI_API_KEY')


RECAPTCHA_PUBLIC_KEY = os.getenv('RECAPTCHA_PUBLIC_KEY')
RECAPTCHA_PRIVATE_KEY = os.getenv('RECAPTCHA_PRIVATE_KEY')

CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"

CRISPY_TEMPLATE_PACK = "tailwind"
SENDGRID_API_KEY = os.getenv('SENDGRID_API_KEY')

# # Celery setup (using redis)
REDIS_URL = os.getenv("REDIS_URL", "redis://localhost:6379")

CELERY_BROKER_URL = CELERY_RESULT_BACKEND = REDIS_URL
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'




CSRF_TRUSTED_ORIGINS = ["http://*","https://student-assistant-production.up.railway.app"]

SECURE_HSTS_SECONDS = 3_154_000  # ~1 año
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True



#taggit conf
TAGGIT_CASE_INSENSITIVE = True